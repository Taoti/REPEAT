{#
  This implementation is based on the WAI-ARIA Authoring Practices 1.1 example:
  https://www.w3.org/TR/wai-aria-practices/examples/accordion/accordion.html


  MULTIPLE COLUMNS of ACCORDION ITEMS
  ---
  In order to render multiple columns of accordion items in a nice "masonry"
  style, such that openining an accordion in Column-A does not push down empty
  space below a sibling accordion in Column-B, the current best practice option is
  to use twig on the field ourput of {{ content.repeat_accordion_items }}, and
  assign accordions into two (or more) column containers like so:

  in `field--repeat-accordion-items.html.twig`:

  ```
    <div class="accordion-column">
      {% for item in items %}
        {% if loop.index is odd %}
          {{ item.content }}
        {% endif %}
      {% endfor %}
    </div>

    <div class="accordion-column">
      {% for item in items %}
        {% if loop.index is not odd %}
          {{ item.content }}
        {% endif %}
      {% endfor %}
    </div>
  ```
#}


{%
  set classes = [
    'accordion-group',
    'paragraph',
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

{% set titleID = 'accordion-group-title-' ~ paragraph.id() %}

<section {{ attributes.addClass(classes) }} aria-labelledby="{{ titleID }}">
  <h2 class="eyebrow-heading" id="{{ titleID }}">
    {{- content.repeat_title|field_value -}}
  </h2>

  <div class="accordion-group__accordion-items">
    {{ content.repeat_accordion_items|field_value }}
  </div>

  {#
    I don't love the global, hardset use of the term "cta"
    when we really just mean link. - JE /shrug
  #}
  {% if content.repeat_cta is not empty %}
    <div class="accordion-group__cta">
      {{ content.repeat_cta|field_value }}
    </div>
  {% endif %}
</section>
