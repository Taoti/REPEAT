{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}

{%
  set classes = [
    'field',
    'fieldName-' ~ field_name|clean_class,
    'fieldType-' ~ field_type|clean_class,
    'layout-fieldLabel-' ~ label_display|clean_class,
  ]
%}
{%
  set title_classes = [
    'field-label',
    label_display == 'visually_hidden' ? 'visuallyHidden',
  ]
%}


<span id="qaTop"></span>
<div class="paragraphQA-questions-wrapper">
<div class="paragraphQA-content">
  <ol class="paragraphQA-questions">
    {% if multiple %}
      <li{{ attributes.addClass(classes, 'field-items') }}>
        {% for item in items %}
          {# Test for paragraph, and if present, add paragraph name to class list. #}
          {% if item.content['#paragraph'].bundle|trim is not empty %}
            <li{{ item.attributes.addClass('field-item', 'paragraphItem-'~ item.content['#paragraph'].bundle|replace({'_': '-'})) }}><a href="#question-{{loop.index}}"> {{ item.content['#paragraph'].field_question.value }}</a></li>
          {% else %}
            <li{{ item.attributes.addClass('field-item') }}><a href="#question-{{loop.index}}"> {{ item.content['#paragraph'].field_question.value }}</a></li>
          {% endif %}
        {% endfor %}
      </li>
    {% else %}
      {% for item in items %}
        {# Test for paragraph, and if present, add paragraph name to class list. #}
        {% if item.content['#paragraph'].bundle|trim is not empty %}
          <li{{ attributes.addClass(classes, 'field-item', 'paragraphItem-'~  item.content['#paragraph'].bundle|replace({'_': '-'})) }}><a href="#question-{{loop.index}}"> {{ item.content }}</a></ili>
        {% else %}
          <li{{ attributes.addClass(classes, 'field-item') }}>{{ item.content }}</li>
        {% endif %}
      {% endfor %}
    {% endif %}
  </ol>
</div>
</div>

{% if label_hidden %}
  {% if multiple %}
    <div class="paragraphQA-answers-wrapper">
    <div class="paragraphQA-content">
      <div{{ attributes.addClass(classes, 'field-items') }}>
        <ol class="paragraphQA-answers">
          {% for item in items %}
          {# Test for paragraph, and if present, add paragraph name to class list. #}
            <li>
              {% if item.content['#paragraph'].bundle|trim is not empty %}
                <div id="question-{{loop.index}}" {{ item.attributes.addClass('field-item', 'paragraphItem-'~ item.content['#paragraph'].bundle|replace({'_': '-'})) }}>{{ item.content }}</div>
              {% else %}
                <div id="question-{{loop.index}}" {{ item.attributes.addClass('field-item') }}>{{ item.content }}</div>
              {% endif %}
            </li>
          {% endfor %}
        </div>
      {% else %}
        {% for item in items %}
          <li>
            {# Test for paragraph, and if present, add paragraph name to class list. #}
            {% if item.content['#paragraph'].bundle|trim is not empty %}
              <div id="question-{{loop.index}}" {{ attributes.addClass(classes, 'field-item', 'paragraphItem-'~  item.content['#paragraph'].bundle|replace({'_': '-'})) }}>{{ item.content }}</div>
        {% else %}
          <div id="question-{{loop.index}}" {{ attributes.addClass(classes, 'field-item') }}>{{ item.content }}</div>
        {% endif %}
      </li>
    {% endfor %}
  {% endif %}
{% else %}
  <div{{ attributes.addClass(classes) }}>
    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
    {% if multiple %}
      <div class="field-items">
    {% endif %}
      {% for item in items %}
        <li>        
{# Test for paragraph, and if present, add paragraph name to class list. #}
        {% if item.content['#paragraph'].bundle|trim is not empty %}
          <div id="question-{{loop.index}}" {{ item.attributes.addClass('field-item', 'paragraphItem-'~  item.content['#paragraph'].bundle|replace({'_': '-'})) }}>{{ item.content }}</div>
        {% else %}
          <div id="question-{{loop.index}}" {{ item.attributes.addClass('field-item') }}>{{ item.content }}</div>
        {% endif %}
      </li>
      {% endfor %}
    {% if multiple %}
      </div>
    {% endif %}
  </div>
</ol>
</div>
</div>
{% endif %}
